#BlueJ class context
comment0.params=
comment0.target=void\ createShipList()
comment0.text=\r\n\ createShipList\r\n\ creates\ an\ array\ list\ of\ each\ type\ of\ ship\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment1.params=
comment1.target=void\ gameInitilisation()
comment1.text=\r\n\ gameInitilisation\r\n\ Initilisation\ of\ the\ game.\ This\ will\ run\ whenever\ a\ new\ game\ is\ started.\r\n\ It\ will\ create\ a\ copy\ of\ the\ array\ list\ containing\ all\ ship\ objects\r\n\ and\ then\ sets\ the\ game\ board.\r\n\ It\ will\ validate\ the\ positions\ of\ each\ object\ to\ ensure\ there\ is\ no\ collision.\r\n\ game\ initilisation\ will\ continue\ to\ run\ until\ all\ ships\ have\ been\ placed\ correctly.\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment10.params=shipParameter\ ifOccupied\ i
comment10.target=int\ getStartingCords(Fleet,\ int,\ int)
comment10.text=\r\n\ getStartingCords\r\n\ Surrounded\ by\ a\ do\ while\ loop.\r\n\ generates\ random\ x\ and\ y\ cordinates\ for\ the\ starting\ cordinates\r\n\ of\ the\ ship\ being\ passed\ into\ the\ method.\r\n\ if\ i\ being\ passed\ in\ does\ not\ \=1\ then\ check\ if\ occupied\r\n\ and\ if\ occupied\ \=\ 3\ then\ update\ grid\ with\ previous\ location\ to\ reset\ otherwise\r\n\ store\ location\ for\ the\ ship\ and\ end\ loop.\r\n\ @param\ \ Fleet\ shipParameter,int\ ifOccupied,int\ i\r\n\ @return\ int\ ifOccupied\r\n
comment11.params=i\ randomX\ randomY
comment11.target=void\ getOrientation(int,\ int,\ int)
comment11.text=\r\n\ getOrientation\r\n\ gets\ the\ axis\ and\ then\ checks\ the\ axis\ and\ then\ sets\ the\ orientation\r\n\ @param\ \ int\ i,\ int\ randomX,\ int\ randomY\ \r\n\ @return\ none\r\n
comment12.params=axis\ i
comment12.target=void\ setAxis(int,\ int)
comment12.text=\r\n\ setAxis\r\n\ sets\ the\ shipAxis\r\n\ @param\ \ int\ axis,int\ i\ \r\n\ @return\ none\r\n
comment13.params=
comment13.target=Fleet[]\ getUserList()
comment13.text=\r\n\ getUserList\r\n\ returns\ User\ List\r\n\ @param\ \ none\r\n\ @return\ UserList\r\n
comment14.params=userList
comment14.target=void\ setUserList(Fleet[])
comment14.text=\r\n\ setUserList\r\n\ sets\ User\ List\r\n\ @param\ \ UserList\r\n\ @return\ none\r\n
comment15.params=
comment15.target=int[][]\ getPreviousGrid()
comment15.text=\r\n\ getPreviousGrid\r\n\ gets\ previous\ grid\r\n\ @param\ \ none\r\n\ @return\ previousGrid\r\n
comment16.params=previous_Grid
comment16.target=void\ setPreviousGrid(int[][])
comment16.text=\r\n\ setPreviousGrid\r\n\ sets\ previous\ grid\r\n\ @param\ \ int[][]\ previous_Grid\r\n\ @return\ none\r\n
comment2.params=
comment2.target=void\ placeBattleShips()
comment2.text=\r\n\ placeBattleShips\r\n\ after\ the\ initial\ starting\ cordinates\ have\ been\ generated\ for\ each\ ship\r\n\ placebattleships\ will\ be\ called\ to\ genereate\ the\ end\ ship\ placement\ cordinates.\r\n\ This\ code\ will\ check\ to\ see\ if\ the\ x\ or\ y\ cords\ are\ in\ valid\ and\ if\ not,\ \r\n\ then\ it\ will\ set\ those\ cordinates\ in\ the\ grid\ to\ equal\ 3\ which\ signifies\ a\ ship.\r\n\ this\ loop\ will\ continue\ until\ all\ ship\ objects\ have\ been\ generated.\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment3.params=
comment3.target=void\ endPosition()
comment3.text=\r\n\ endPosition\r\n\ Endposition\ will\ map\ the\ cordinates\ of\ the\ ships\ from\ using\ start\ and\ end\ cordinates\r\n\ to\ a\ set\ of\ cordinates\ stored\ in\ fleet.\r\n\ it\ uses\ the\ orientation\ of\ the\ ship\ along\ with\ checking\ the\ value\ of\ that\ start\ cordiantes\ \r\n\ to\ generate\ where\ the\ end\ of\ the\ ship\ will\ be\ placed.\r\n\ \r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment4.params=
comment4.target=void\ printGenerateShipCordinates()
comment4.text=\r\n\ printGenerateShipCordinates\r\n\ displays\ the\ shipCordinates\ generated\ in\ EndPosition\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment5.params=
comment5.target=void\ generateShipCordinates()
comment5.text=\r\n\ generateShipCordinates\r\n\ Endposition\ will\ map\ the\ cordinates\ of\ the\ ships\ from\ their\ start\ to\ end\ cordinates\r\n\ to\ a\ set\ of\ cordinates\ stored\ in\ fleet\ however\ GenerateShipCordinates\ will\ fill\ the\ locations\ inbetween\r\n\ if\ the\ ship\ is\ greater\ than\ 2\ spaces.\r\n\ it\ uses\ the\ orientation\ of\ the\ ship\ along\ with\ checking\ the\ value\ of\ that\ location\ generated\r\n\ to\ ensure\ ships\ are\ targered\ correctly\ when\ a\ user\ select\ on\ the\ grid.\r\n\ This\ will\ allow\ the\ game\ to\ later\ display\ a\ pop\ up\ with\ a\ ship\ is\ hit\ identifying\ it\ as\ what\ ship\r\n\ and\ how\ many\ targets\ remain\ on\ that\ ship\ until\ it\ sinks.\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment6.params=
comment6.target=void\ DisplayShipLocations()
comment6.text=\r\n\ DisplayShipLocations\r\n\ displays\ the\ each\ ships\ starting\ and\ end\ cordinates\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment7.params=xCords\ yCords
comment7.target=void\ checkShipHit(int,\ int)
comment7.text=\r\n\ checkShipHit\r\n\ checks\ if\ ship\ has\ been\ hit.\r\n\ will\ search\ against\ all\ cordiantes\ for\ each\ ship\ and\ if\ ship\ is\ hit\r\n\ plays\ sound.\ If\ shink\ is\ sunken,\ siren\ is\ sounded.\r\n\ pop\ up\ is\ displayed\ each\ time\ a\ ship\ is\ hit\ and\ if\ a\ ship\ has\ been\ sunken\r\n\ @param\ \ int\ xCords,\ int\ yCords\r\n\ @return\ none\r\n
comment8.params=
comment8.target=void\ displayShipDetails()
comment8.text=\r\n\ displayShipDetails\r\n\ displays\ the\ name,\ size\ ,axis\ and\ orientation\ fo\ each\ ship\ in\ userlist\ array\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment9.params=shipParameter\ ifOccupied\ i\ isValidOccupancy
comment9.target=void\ getCordsAndAxis(Fleet,\ int,\ int,\ boolean)
comment9.text=\r\n\ getCordsAndAxis\r\n\ calls\ ifOccupied\ from\ super\ class\ to\ get\ starting\ cordinates\r\n\ ifOccupied\ return\ zero,\ set\ a\ ship\ at\ that\ location.\r\n\ display\ ship\ info\ and\ then\ get\ the\ axis\ for\ that\ ship,\ then\ call\ placeship\r\n\ to\ position\ rest\ of\ the\ ship.\r\n\ @param\ \ Fleet\ shipParameter,int\ ifOccupied,int\ i,boolean\ isValidOccupancy\r\n\ @return\ none\r\n
numComments=17
