#BlueJ class context
comment0.params=
comment0.target=Gameboard()
comment0.text=\r\n\ Gameboard\r\n\ default\ Constructor\ for\ objects\r\n\ \r\n
comment1.params=
comment1.target=void\ director()
comment1.text=\r\n\ director\r\n\ will\ call\ createAndShowGUI();\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment10.params=
comment10.target=void\ ExitGame()
comment10.text=\r\n\ ExitGame\r\n\ This\ method\ is\ called\ from\ the\ Menu\ event\:\ Exit\ Game.\r\n\ responds\ to\ Menu\ and\ Mouse\ click\ events\r\n\ @param\ none\r\n\ @return\ none\r\n
comment11.params=
comment11.target=void\ SaveGame()
comment11.text=\r\n\ SaveGame\r\n\ This\ method\ is\ called\ from\ the\ Menu\ event\:\ Save\ Game.\r\n\ responds\ to\ Menu\ and\ Mouse\ click\ events\r\n\ @param\ none\r\n\ @return\ none\r\n
comment12.params=row\ col
comment12.target=void\ fireShot(int,\ int)
comment12.text=\r\n\ fireShot\r\n\ Check\ grid\ cordinates\ to\ see\ if\ location\ contains\ a\ ship\r\n\ if\ contains\ a\ ship\ then\ set\ icon\ for\ that\ position\ to\ \=\ exlpode\ image\r\n\ and\ play\ explosion\ sound.\ Then\ check\ if\ all\ targets\ of\ that\ ship\ have\ been\ hit.\r\n\ If\ all\ targets\ of\ ship\ have\ been\ hit,\ play\ siren.\r\n\ else\ display\ splash\ and\ play\ splash\ sound.\r\n\ Update\ shots,hits\ and\ misses\ by\ using\ getters\ and\ setters\ and\ then\ updating\ the\ labels\ in\ the\ GUI\r\n\ @param\ int\ row,\ int\ col\r\n\ @return\ none\r\n
comment13.params=pLocation
comment13.target=void\ sound(java.lang.String)
comment13.text=\r\n\ sound\r\n\ accepts\ a\ parameter\ that\ contains\ a\ string\ with\ the\ file\ location.\r\n\ trys\ to\ play\ sound\ if\ string\ is\ valid\ else\ catches\ exception\r\n\ @param\ String\ pLocation\r\n\ @return\ none\r\n
comment14.params=inputColumn\ inputRow\ numberOfShots
comment14.target=void\ checkGame(int,\ int,\ int)
comment14.text=\r\n\ checkGame\r\n\ gets\ game\ file\ and\ sets\ grid\ to\ equal\ game\ file.\r\n\ checks\ if\ grid\ contains\ a\ hit,\ miss,ship\ or\ invalid\ target.\r\n\ updates\ grid\ depending\ upon\ which\ is\ targeted.\r\n\ if\ ship\ is\ hit,\ display\ message\ saying\ which\ ship\ and\ how\ many\ spaces\ remain\r\n\ at\ end\ of\ method,\ checks\ to\ see\ if\ any\ ships\ or\ shots\ remain.\r\n\ if\ no\ shots\ remain,\ user\ loses\ the\ game\ and\ GameOverLoser\ is\ called.\r\n\ if\ no\ ships\ remain,\ user\ wins\ the\ game\ and\ GameOverWinner\ is\ called.\r\n\ @return\ none\r\n
comment15.params=
comment15.target=void\ gameOverLoser()
comment15.text=\r\n\ gameOverLoser\r\n\ displays\ a\ jOptionpane\ with\ a\ you\ lose\ message\ and\ \r\n\ then\ displays\ lose\ screen\ after\ user\ selects\ ok.\r\n\ @param\ none\r\n\ @return\ none\r\n
comment16.params=
comment16.target=void\ gameOverWinner()
comment16.text=\r\n\ gameOverWinner\r\n\ displays\ a\ jOptionpane\ with\ a\ you\ win\ message\ and\ \r\n\ then\ displays\ win\ screen\ after\ user\ selects\ ok.\r\n\ @param\ none\r\n\ @return\ none\r\n
comment17.params=row\ col\ c
comment17.target=boolean\ setGuiSquare(int,\ int,\ char)
comment17.text=\r\n\ setGuiSquare\r\n\ Sets\ a\ Gui\ grid\ square\ at\ row,\ col\ to\ display\ a\ character\r\n\ @param\ none\r\n\ @return\ boolean\r\n
comment18.params=o
comment18.target=java.lang.String\ getClassName(java.lang.Object)
comment18.text=\r\n\ \ getClassName\r\n\ \ Returns\ the\ class\ name\r\n\ @param\ \ none\r\n\ @return\ grid\r\n
comment19.params=
comment19.target=javax.swing.JFrame\ getFrame()
comment19.text=\r\n\ getFrame\r\n\ returns\ gameboard\ frame\r\n\ @param\ none\r\n\ @return\ frame\r\n
comment2.params=
comment2.target=javax.swing.JMenuBar\ createMenu()
comment2.text=\r\n\ createMenu\r\n\ creates\ a\ new\ JMenuBar\ holding\ Main\ menu\ and\ Exit\ along\ with\ 2\ action\ listeners\r\n\ @param\ \ none\r\n\ @return\ menuBar\r\n
comment20.params=frame
comment20.target=void\ setFrame(javax.swing.JFrame)
comment20.text=\r\n\ setFrame\r\n\ sets\ gameboard\ frame\r\n\ @param\ frame\r\n\ @return\ none\r\n
comment3.params=
comment3.target=java.awt.Container\ createContentPane()
comment3.text=\r\n\ createContentPane\r\n\ creates\ a\ new\ contrainer\ to\ hold\ grid\ buttons\ in\ a\ grid\ layout.\r\n\ @param\ \ none\r\n\ @return\ grid\r\n
comment4.params=e
comment4.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment4.text=\r\n\ This\ method\ handles\ events\ from\ the\ Menu\ and\ the\ board.\r\n\r\n
comment5.params=
comment5.target=void\ createAndShowGUI()
comment5.text=\r\n\ createAndShowGUI\r\n\ Create\ the\ GUI\ and\ show\ it.\r\n\ For\ thread\ safety,\ this\ method\ should\ be\ invoked\ from\ the\ event-dispatching\ thread.\r\n\ @param\ \ none\r\n\ @return\ none\r\n
comment6.params=
comment6.target=void\ MainMenu()
comment6.text=\r\n\ MainMenu\r\n\ This\ method\ is\ called\ from\ the\ Menu\ event\:\ Main\ Menu.\r\n\ responds\ to\ Menu\ and\ Mouse\ click\ events\r\n\ @param\ none\r\n\ @return\ none\r\n
comment7.params=
comment7.target=void\ run()
comment7.text=\r\n\ run\r\n\ used\ to\ call\ createandshowGUi\ from\ outside\ class\r\n\ @param\ none\r\n\ @return\ none\r\n
comment8.params=
comment8.target=void\ NewGame()
comment8.text=\r\n\ NewGame\r\n\ This\ method\ is\ called\ from\ the\ Menu\ event\:\ New\ Game.\r\n\ responds\ to\ Menu\ and\ Mouse\ click\ events\r\n\ @param\ none\r\n\ @return\ none\r\n
comment9.params=
comment9.target=void\ LoadGame()
comment9.text=\r\n\ LoadGame\r\n\ This\ method\ is\ called\ from\ the\ Menu\ event\:\ Load\ Game.\r\n\ responds\ to\ Menu\ and\ Mouse\ click\ events\r\n\ @param\ none\r\n\ @return\ none\r\n
numComments=21
